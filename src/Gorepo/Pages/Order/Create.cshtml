@page
@model Gorepo.Pages.Order.CreateModel

@{
    ViewData["Title"] = "创建订单";
}

<h1>创建订单</h1>

<h4></h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label class="control-label" for="orderId">订单号</label>
                <input class="form-control" type="text" data-val="true" data-val-required="必填项" id="orderId" name="orderId" value="go_@Guid.NewGuid().ToString()" />
                <span class="text-danger field-validation-valid" data-valmsg-for="orderId" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="orderAmount">订单金额</label>
                <input class="form-control" type="number" data-val="true" data-val-required="必填项" id="orderAmount" name="orderAmount" value="@(new Random().Next(1, 100))" />
                <span class="text-danger field-validation-valid" data-valmsg-for="orderAmount" data-valmsg-replace="true"></span>
            </div>

            <div class="form-group">
                <input id="createOrder" type="button" value="创建" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div id="error" style="color:red;"></div>
<br />

<div id="orderCode"></div>
<br />

<div id="qrcode"></div>
<br />

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="~/lib/qrcodejs/qrcode.min.js"></script>

    <script>
        let error = document.getElementById('error')
        let orderCode = document.getElementById("orderCode")
        let qrcode = document.getElementById("qrcode")

        document.getElementById('createOrder').addEventListener('click', () => {
            error.innerHTML = ''
            orderCode.innerHTML = ''
            qrcode.innerHTML = ''

            fetch('/api/order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId: document.getElementById('orderId').value,
                    orderAmount: parseFloat(document.getElementById('orderAmount').value),
                })
            }).then(response => {
                return response.json()
            }).then(json => {
                if (!json.success) {
                    error.innerHTML = json.message
                    return
                }

                orderCode.innerHTML = json.result.orderCode

                new QRCode(qrcode, {
                    text: json.result.orderCode,
                    width: 256,
                    height: 256,
                    colorDark: "#000000",
                    colorLight: "#ffffff",
                    correctLevel: QRCode.CorrectLevel.H
                });
            }).catch(ex => {
                console.log('parsing failed', ex)
                error.innerHTML = '请求失败'
            })
        })
    </script>
}
